import { Button, Link, ListItem, UnorderedList } from "@chakra-ui/react";
import { GetServerSideProps } from "next";
import Head from "next/head";
import Router from "next/router";
import DefaultContainer from "../../../components/common/DefaultContainer";
import { prettify } from "../../../components/common/Formula";
import RoundedBox from "../../../components/common/RoundedBox";
import TitleHeading from "../../../components/common/TitleHeading";
import NoExercisesAvailable from "../../../components/templates/NoExercisesAvailable";
import { useAuth } from "../../../contexts/auth";
import { PL3 } from "../../../types";
import { deletePrivateData, getPublicData } from "../../../utils/NetworkUtils";

export interface PL3PageProps {
  exercises: PL3[];
}

const handleDelete = async (id: number) => {
  await deletePrivateData(`/api/exercises/${id}`).then(() => {
    Router.push("/exercises/PL3");
  });
};

const CustomItem = ({
  exercise,
  isAdmin,
}: {
  exercise: PL3;
  isAdmin: boolean;
}) => {
  if (exercise.complexity === 0) {
    return (
      <ListItem>
        <Link href={"/exercises/PL3/" + exercise.id}>
          NF: {exercise.normalForm} / Formula: {prettify(exercise.formula)} /
          Goal: {prettify(exercise.endFormula)} / Complexity:{" "}
          {exercise.complexity}
        </Link>
        {isAdmin && (
          <Button size={"xs"} ml={2} onClick={() => handleDelete(exercise.id)}>
            X
          </Button>
        )}
      </ListItem>
    );
  } else {
    return (
      <ListItem>
        <Link href={"/exercises/PL3/" + exercise.id}>
          NF: {exercise.normalForm} / Formula: {prettify(exercise.formula)} /
          Complexity: {exercise.complexity}
        </Link>
        {isAdmin && (
          <Button size={"xs"} ml={2} onClick={() => handleDelete(exercise.id)}>
            X
          </Button>
        )}
      </ListItem>
    );
  }
};

const PL3Page = ({ exercises }: PL3PageProps) => {
  const { isAdmin } = useAuth();

  return (
    <>
      <Head>
        <title>PL2 Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <DefaultContainer>
        <TitleHeading title="PL3 Page" />

        {Array.isArray(exercises) && exercises.length !== 0 ? (
          <RoundedBox>
            <UnorderedList styleType="none" spacing={3}>
              {exercises.map((exercise, index) => {
                return (
                  <CustomItem
                    key={index}
                    exercise={exercise}
                    isAdmin={isAdmin}
                  ></CustomItem>
                );
              })}
            </UnorderedList>
          </RoundedBox>
        ) : (
          <NoExercisesAvailable />
        )}
      </DefaultContainer>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  const exercises: PL3[] = await getPublicData<PL3[]>(
    "/api/exercises?exType=PL3"
  );
  return {
    props: { exercises: exercises },
  };
};

export default PL3Page;
